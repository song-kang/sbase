/**
 *
 * 文 件 名 : SIniFile.h
 * 创建日期 : 2002-05-14
 * 作    者 : 邵凯田(skt001@163.com)
 * 修改日期 : $Date: 2008/09/02 01:50:02 $
 * 当前版本 : $Revision: 1.1 $
 * 功能描述 : INI文件操作类，可读写INI文件
 * 修改记录 : 
 *            $Log: IniFile.h,v $
 *            Revision 1.1  2008/09/02 01:50:02  shaokt
 *            *** empty log message ***
 *
 *            Revision 1.1  2007/08/15 03:09:22  shaokt
 *            *** empty log message ***
 *
 **/

#if !defined(AFX_INIFILE_H__D6BE0D97_13A8_11D4_A5D2_002078B03530__INCLUDED_)
#define AFX_INIFILE_H__D6BE0D97_13A8_11D4_A5D2_002078B03530__INCLUDED_

#ifdef WIN32
#ifndef _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_WARNINGS
#endif
#pragma warning(disable: 4786)
#pragma warning(disable: 4503)
#endif

#include <stdio.h>
#include <stdlib.h>
#include "SString.h"

#ifndef NULL
#define NULL 0
#endif


//////////////////////////////////////////////////////////////////////////
// 名    称:  SIniFile
// 作    者:  邵凯田
// 创建时间:  2011-11-13 16:09
// 描    述:  INI文件读写类
//////////////////////////////////////////////////////////////////////////
class SBASE_EXPORT SIniFile
{
public:
	struct stuIniFileField;

	struct SBASE_EXPORT stuIniFileGroup
	{
		SString sGroupName;
		stuIniFileField *pFirstField;
		stuIniFileGroup *pNext;
	};

	struct SBASE_EXPORT stuIniFileField
	{
		SString sFieldName;
		SString sValue;
		stuIniFileField *pNext;
	};
public:
	SIniFile();
	~SIniFile();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  设置INI文件全路径
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:09
	// 参数说明:  @sPathFile表示文件名全路径
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	void SetPath(SString sPathFile);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  读取INI文件内容
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:10
	// 参数说明:  @sPathFile表示待打开的文件名，为空时使用SetPath保存的文件名
	// 返 回 值:  true表示读取成功,false表示读取失败
	//////////////////////////////////////////////////////////////////////////
	bool ReadIniFile(SString sPathFile="");

	////////////////////////////////////////////////////////////////////////
	// 描    述:  测试指定的配置项是否存在
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:11
	// 参数说明:  @sGroup表示组名称(中括号的标题)
	//            @sField表示组内的配置项名称
	// 返 回 值:  true表示指定的配置项存在，false表示指定的配置项不存在
	//////////////////////////////////////////////////////////////////////////
	bool IsKey(SString sGroup, SString sField);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  读取指定配置项的值内容
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:13
	// 参数说明:  @sGroup表示组名称(中括号的标题)
	//            @sField表示组内的配置项名称
	// 返 回 值:  返回配置项内容
	//////////////////////////////////////////////////////////////////////////
	SString GetValue(SString sGroup,SString sField);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  读取指定的配置项的整型值，并允许指定未配置时的缺省值
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:14
	// 参数说明:  @sGroup表示组名称(中括号的标题)
	//            @sField表示组内的配置项名称
	//            @idefault表示读取失败(未配置的情况下)时的缺省值
	// 返 回 值:  配置值
	//////////////////////////////////////////////////////////////////////////
	int GetKeyIntValue(SString sGroup, SString sField, int idefault = 0);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  读取指定的配置项的字符串值，并允许指定未配置时的缺省值
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:20
	// 参数说明:  @sGroup表示组名称(中括号的标题)
	//            @sField表示组内的配置项名称
	//            @szdefault表示读取失败(未配置的情况下)时的缺省值
	// 返 回 值:  配置值
	//////////////////////////////////////////////////////////////////////////
	SString GetKeyStringValue(SString sGroup, SString sField, SString szdefault = "");

	////////////////////////////////////////////////////////////////////////
	// 描    述:  设置指定配置项的值内容
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:21
	// 参数说明:  @sGroup表示组名称(中括号的标题)
	//            @sField表示组内的配置项名称
	//            @sVal表示配置值
	// 返 回 值:  true表示配置成功，false表示配置失败
	//////////////////////////////////////////////////////////////////////////
	bool SetValue(SString sGroup,SString sField,SString sVal);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  设置指定配置项的整数型值，并允许自动配置文件
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:22
	// 参数说明:  @sGroup表示组名称(中括号的标题)
	//            @sField表示组内的配置项名称
	//            @ivalue表示配置值
	//            @autoSave表示是否自动保存，true自动保存，false不保存
	// 返 回 值:  true表示配置成功，false表示配置失败
	//////////////////////////////////////////////////////////////////////////
	bool SetKeyIntValue(SString sGroup, SString sField, int ivalue, bool autoSave=true);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  设置指定配置项的字符串型值，并允许自动配置文件
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:23
	// 参数说明:  @sGroup表示组名称(中括号的标题)
	//            @sField表示组内的配置项名称
	//            @szvalue表示配置值
	//            @autoSave表示是否自动保存，true自动保存，false不保存
	// 返 回 值:  true表示配置成功，false表示配置失败
	//////////////////////////////////////////////////////////////////////////
	bool SetKeyStringValue(SString sGroup, SString sField, SString szvalue, bool autoSave=true);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  按打开时的文件名，保存INI文件
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:24
	// 参数说明:  void
	// 返 回 值:  true表示保存成功，false表示保存失败
	//////////////////////////////////////////////////////////////////////////
	bool WriteFile();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  释放所有配置对象，释放内容
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:24
	// 参数说明:  void
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	void Release();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  测试当前INI文件是否已经打开
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:26
	// 参数说明:  void
	// 返 回 值:  true表示已经打开，false表示尚未打开
	//////////////////////////////////////////////////////////////////////////
	inline bool IsOpened(){return m_bOpened;};

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取下一个INI组
	// 作    者:  邵凯田
	// 创建时间:  2014-12-5 13:09
	// 参数说明:  @hGroup表示上一组的句柄，NULL表示取第一个组
	// 返 回 值:  long, NULL表示没有下一组
	//////////////////////////////////////////////////////////////////////////
	long GetNextGroup(long hGroup);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取指定INI组内的下一个属性
	// 作    者:  邵凯田
	// 创建时间:  2014-12-5 13:09
	// 参数说明:  @hGroup表示组句柄
	//            @hField表示上一属性的句柄，NULL表示取属性一个组
	// 返 回 值:  long, NULL表示没有下一组
	//////////////////////////////////////////////////////////////////////////
	long GetNextField(long hGroup, long hField);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取指定句柄的组的名称
	// 作    者:  邵凯田
	// 创建时间:  2014-12-5 13:19
	// 参数说明:  @hGroup表示组句柄，必须是通过GetNextGroup获取的有效句柄
	// 返 回 值:  组名称
	//////////////////////////////////////////////////////////////////////////
	SString GetGroupName(long hGroup);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取指定句柄的属性的名称
	// 作    者:  邵凯田
	// 创建时间:  2014-12-5 13:19
	// 参数说明:  @hField表示属性句柄，必须是通过GetNextField获取的有效句柄
	// 返 回 值:  属性名称
	//////////////////////////////////////////////////////////////////////////
	SString GetFieldName(long hField);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取指定句柄的属性的值
	// 作    者:  邵凯田
	// 创建时间:  2014-12-5 13:19
	// 参数说明:  @hField表示属性句柄，必须是通过GetNextField获取的有效句柄
	// 返 回 值:  属性值
	//////////////////////////////////////////////////////////////////////////
	SString GetFieldValue(long hField);

private:
	////////////////////////////////////////////////////////////////////////
	// 描    述:  搜索指定的组,如果不存在允许自动创建
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:26
	// 参数说明:  @sGroup表示组名称(中括号的标题)
	//            @bCreate是否在组不存在的时候创建新的组,true允许创建，false不创建
	// 返 回 值:  stuIniFileGroup*
	//////////////////////////////////////////////////////////////////////////
	stuIniFileGroup * GetGroup(SString sGroup,bool bCreate=true);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  投过指定配置项指定，如果不存在允许自动创建
	// 作    者:  邵凯田
	// 创建时间:  2011-11-13 16:28
	// 参数说明:  @sGroup表示组名称(中括号的标题)
	//            @sField表示配置项名称
	//            @bCreate是否在组不存在的时候创建新的组或配置项,true允许创建，false不创建
	// 返 回 值:  
	//////////////////////////////////////////////////////////////////////////
	stuIniFileField * GetField(SString sGroup,SString sField,bool bCreate=true);

private:
	bool m_bOpened;
	stuIniFileGroup *m_pFirstGroup;
	SString m_sPathFile;
};

#endif // !defined(AFX_INIFILE_H__D6BE0D97_13A8_11D4_A5D2_002078B03530__INCLUDED_)
