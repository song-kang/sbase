/**
*
* 文 件 名 : SDateTime.h
* 创建日期 : 2007-01-01
* 作    者 : 邵凯田(skt001@163.com)
* 修改日期 : $Date: 2011/08/31 08:43:33 $
* 当前版本 : $Revision: 1.1 $
* 功能描述 : 类QT的日期时间类
* 修改记录 : 
*            $Log: SDateTime.h,v $
*            Revision 1.1  2011/08/31 08:43:33  shaokt
*            *** empty log message ***
*
*            Revision 1.2  2011/03/23 01:07:49  shaokt
*            *** empty log message ***
*
*            Revision 1.1  2011/02/25 03:12:07  shaokt
*            *** empty log message ***
*
*            Revision 1.1  2010/08/09 03:04:43  shaokt
*            *** empty log message ***
*
*            Revision 1.1  2009/09/15 02:14:07  shaokt
*            通迅记录分析装置项目首次提交
*
*            Revision 1.6  2009/06/09 08:46:14  shaokt
*            *** empty log message ***
*
*            Revision 1.5  2009/01/31 06:37:34  shaokt
*            *** empty log message ***
*
*            Revision 1.4  2009/01/06 09:58:18  shaokt
*            *** empty log message ***
*
*            Revision 1.3  2008/12/22 08:54:13  shaokt
*            *** empty log message ***
*
*            Revision 1.2  2008/09/16 05:32:17  shaokt
*            *** empty log message ***
*
*            Revision 1.1  2008/09/01 11:38:28  shaokt
*            *** empty log message ***
*
*            Revision 1.1  2008/09/01 08:58:01  shaokt
*            *** empty log message ***
*
*            Revision 1.12  2008/02/18 01:07:55  shaokt
*            *** empty log message ***
*
*            Revision 1.11  2007/11/14 11:30:49  shaokt
*            WINDOWS下修改系统时间的－8小时时差问题
*
*            Revision 1.10  2007/10/29 07:30:23  shaokt
*            添加对象地址是否为4的倍数的检测函数，为检测ARM下由于pack(1)造成的内存问题
*
*            Revision 1.9  2007/10/19 06:17:09  shaokt
*            添加time_t的构造函数
*
*            Revision 1.8  2007/10/15 08:54:54  shaokt
*            *** empty log message ***
*
*            Revision 1.7  2007/10/12 09:40:09  shaokt
*            *** empty log message ***
*
*            Revision 1.6  2007/10/11 13:16:46  shaokt
*            增加设置系统当前时间的函数
*
*            Revision 1.5  2007/09/27 05:09:23  shaokt
*            修改增加负毫秒时的BUG
*
*            Revision 1.4  2007/09/27 01:51:28  shaokt
*            增加从字符格式化到日期时间的函数
*
*            Revision 1.3  2007/09/26 02:54:37  shaokt
*            修改增加N秒时，未处理年月（－1970，－1）的问题
*
*            Revision 1.2  2007/09/11 08:17:52  shaokt
*            基类更新
*
*            Revision 1.1  2007/08/15 03:09:22  shaokt
*            *** empty log message ***
*
**/

#ifndef __SKT_DATE_TIME_H__
#define __SKT_DATE_TIME_H__

#include <time.h>
#ifndef WIN32
#include <sys/time.h>
#endif
#include "SString.h"

class SDateTime;

//////////////////////////////////////////////////////////////////////////
// 名    称:  SDate
// 作    者:  邵凯田
// 创建时间:  2011-11-14 15:08
// 描    述:  日期类
//////////////////////////////////////////////////////////////////////////
class SBASE_EXPORT SDate
{
public:
	SDate();
	SDate(int y,int m,int d);
	~SDate();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取年
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:09
	// 参数说明:  void
	// 返 回 值:  年
	//////////////////////////////////////////////////////////////////////////
	int year();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取月
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:09
	// 参数说明:  void
	// 返 回 值:  月
	//////////////////////////////////////////////////////////////////////////
	int month();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取日
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:09
	// 参数说明:  void
	// 返 回 值:  日
	//////////////////////////////////////////////////////////////////////////
	int day();

	//////////////////////////////////////////////////////////////////////////
	// 描    述:  取星期几0~6表示星期日~星期六
	// 作    者:  邵凯田
	// 创建时间:  2015-12-15 15:34
	// 参数说明:  void
	// 返 回 值:  int
	//////////////////////////////////////////////////////////////////////////
	int wday();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  赋值运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:09
	// 参数说明:  @d参考值
	// 返 回 值:  this
	//////////////////////////////////////////////////////////////////////////
	SDate& operator=(const SDate &d);
	
	////////////////////////////////////////////////////////////////////////
	// 描    述:  等于比较运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:10
	// 参数说明:  @other表示参考值
	// 返 回 值:  true表示与参考值相等，false表示与参考值不等
	//////////////////////////////////////////////////////////////////////////
	bool operator==(SDate &other);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  不等于比较运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:11
	// 参数说明:  @other表示参考值
	// 返 回 值:  true表示与参考值不等，false表示与参数值相等
	//////////////////////////////////////////////////////////////////////////
	bool operator!=(SDate &other);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取当前系统日期,静态函数
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:12
	// 参数说明:  void
	// 返 回 值:  SDate
	//////////////////////////////////////////////////////////////////////////
	static SDate currentDate();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  格式化日期为一个字符串
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:12
	// 参数说明:  @fmt表示格式化字符串的格式化串，yyyy表示年,MM表示月,dd表示日
	// 返 回 值:  字符串格式的日期
	//////////////////////////////////////////////////////////////////////////
	SString toString(SString fmt);//yyyyMMdd

	int m_year;//年
	int m_month;//月
	int m_day;//日
	int m_wday;//星期
private:
	////////////////////////////////////////////////////////////////////////
	// 描    述:  转换指定的字段
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:14
	// 参数说明:  @fmt可以选择yyyy或MM或dd分别对应年、月日
	// 返 回 值:  格式化后的字符串
	//////////////////////////////////////////////////////////////////////////
	SString toStr(SString fmt);

};
//typedef SDate QDate;

//////////////////////////////////////////////////////////////////////////
// 名    称:  STime
// 作    者:  邵凯田
// 创建时间:  2011-11-14 15:21
// 描    述:  时间类
//////////////////////////////////////////////////////////////////////////
class SBASE_EXPORT STime
{
public:
	STime();
	STime(int h,int m,int s=0, int ms=0);
	STime(time_t* pt);
	~STime();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取时
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:23
	// 参数说明:  void
	// 返 回 值:  时
	//////////////////////////////////////////////////////////////////////////
	int hour();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取分
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:23
	// 参数说明:  void
	// 返 回 值:  分
	//////////////////////////////////////////////////////////////////////////
	int minute();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:23
	// 参数说明:  void
	// 返 回 值:  秒
	//////////////////////////////////////////////////////////////////////////
	int second();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取毫秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:23
	// 参数说明:  void
	// 返 回 值:  秒
	//////////////////////////////////////////////////////////////////////////
	int msec();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取微秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:23
	// 参数说明:  void
	// 返 回 值:  微秒
	//////////////////////////////////////////////////////////////////////////
	int usec();
	
	////////////////////////////////////////////////////////////////////////
	// 描    述:  赋值运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:25
	// 参数说明:  @t参考时间对象
	// 返 回 值:  this
	//////////////////////////////////////////////////////////////////////////
	STime& operator=(const STime &t);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取当前时间，静态函数
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:25
	// 参数说明:  void
	// 返 回 值:  STime
	//////////////////////////////////////////////////////////////////////////
	static STime currentTime();
	
	int m_hour;//时
	int m_minute;//分
	int m_second;//秒
	int m_msecond;//毫秒
	int m_usecond;//微秒
};
//typedef STime QTime;

//////////////////////////////////////////////////////////////////////////
// 名    称:  SDateTime
// 作    者:  邵凯田
// 创建时间:  2011-11-14 15:49
// 描    述:  日期时间类
//////////////////////////////////////////////////////////////////////////
class SBASE_EXPORT SDateTime
{
public:
	SDateTime();
	SDateTime(const SDate &d);
	SDateTime(const SDate &d, const STime &t);
	SDateTime(const SDateTime &dt);
	SDateTime(time_t time);
	
	////////////////////////////////////////////////////////////////////////
	// 描    述:  向当前日期时间添加指定天数
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:28
	// 参数说明:  @days表示天数，可以为负数
	// 返 回 值:  添加后的新对象
	//////////////////////////////////////////////////////////////////////////
	SDateTime addDays(int days);
	
	////////////////////////////////////////////////////////////////////////
	// 描    述:  向当前日期时间添加指定小时
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:28
	// 参数说明:  @hours表示小时，可以为负数
	// 返 回 值:  添加后的新对象
	//////////////////////////////////////////////////////////////////////////
	SDateTime addHours(int hours);
	
	////////////////////////////////////////////////////////////////////////
	// 描    述:  向当前日期时间添加指定分钟
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:28
	// 参数说明:  @minutes表示分钟，可以为负数
	// 返 回 值:  添加后的新对象
	//////////////////////////////////////////////////////////////////////////
	SDateTime addMinutes(int minutes);
	
	////////////////////////////////////////////////////////////////////////
	// 描    述:  向当前日期时间添加指定秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:28
	// 参数说明:  @secs表示秒，可以为负数
	// 返 回 值:  添加后的新对象
	//////////////////////////////////////////////////////////////////////////
	SDateTime addSecs(int secs);
	
	////////////////////////////////////////////////////////////////////////
	// 描    述:  向当前日期时间添加指定毫秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:28
	// 参数说明:  @minutes表示毫秒，可以为负数
	// 返 回 值:  添加后的新对象
	//////////////////////////////////////////////////////////////////////////
	SDateTime addMSecs(int msecs);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  向当前日期时间添加指定微秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:28
	// 参数说明:  @usecs表示微秒，可以为负数
	// 返 回 值:  添加后的新对象
	//////////////////////////////////////////////////////////////////////////
	SDateTime addUSecs(int usecs);



	////////////////////////////////////////////////////////////////////////
	// 描    述:  通过格式字符串格式化时间：yyyyMMddhhmmsszzz
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:31
	// 参数说明:  @fmt为格式化串，可以为yyyyMMddhhmmsszzzuuu
	// 返 回 值:  格式化后的时间
	//////////////////////////////////////////////////////////////////////////
	SString toString(SString fmt);
	
	////////////////////////////////////////////////////////////////////////
	// 描    述:  由格式化时间转换：yyyyMMddhhmmsszzz
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:33
	// 参数说明:  @dtmask为格式化串，可以为yyyyMMddhhmmsszzzuuu
	//            @datetime为字符串表示的时间，必须与@dtmask格式完全一致
	// 返 回 值:  生成的时间对象SDateTime
	//////////////////////////////////////////////////////////////////////////
	static SDateTime makeDateTime(SString dtmask,SString datetime);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  生成SOC世纪秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:34
	// 参数说明:  @y/M/d/h/m/s表示年月日时分秒
	// 返 回 值:  SOC
	//////////////////////////////////////////////////////////////////////////
	static inline int makeSOC(int y,int M,int d,int h,int m,int s)
	{
		struct tm t;
		memset(&t,0,sizeof(t));
		t.tm_year  = y-1900;
		t.tm_mon   = M-1;//月要减1
		t.tm_mday  = d;
		t.tm_hour  = h;
		t.tm_min   = m;
		t.tm_sec   = s;
		return (int)mktime(&t);   
	}

	////////////////////////////////////////////////////////////////////////
	// 描    述:  由年月日时分秒等生成SDateTime对象
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:35
	// 参数说明:  @y/M/d/h/m/s/ms/us表示年月日时分秒毫秒微秒
	// 返 回 值:  生成的时间对象SDateTime
	//////////////////////////////////////////////////////////////////////////
	static SDateTime makeDateTime(int y,int M,int d,int h,int m,int s,int ms=0,int us=0);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  由time_t(即SOC)生成SDateTime对象
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:36
	// 参数说明:  @t表示源SOC时间
	// 返 回 值:  生成的时间对象SDateTime
	//////////////////////////////////////////////////////////////////////////
	static SDateTime makeDateTime(time_t t,int ms=0,int us=0);
	
	////////////////////////////////////////////////////////////////////////
	// 描    述:  取当前系统时间
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:37
	// 参数说明:  void
	// 返 回 值:  生成的时间对象SDateTime
	//////////////////////////////////////////////////////////////////////////
	static SDateTime currentDateTime();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取当前系统时间到整型的SOC和微秒参数
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:37
	// 参数说明:  @soc用于存放SOC世纪秒
	//            @usec用于存放微秒
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	static void getSystemTime(int &soc,int &usec);
	static void getSystemTimeNs(int &soc,int &nsec);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取当前系统时间SOC
	// 作    者:  邵凯田
	// 创建时间:  2014-12-4 11:08
	// 参数说明:  void
	// 返 回 值:  SOC世纪秒
	//////////////////////////////////////////////////////////////////////////
	static time_t getNowSoc();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  设置当前系统时间
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:38
	// 参数说明:  @dt表示准备设置的新时间
	// 返 回 值:  void
	//////////////////////////////////////////////////////////////////////////
	static void setSystemTime(SDateTime dt);
	
	////////////////////////////////////////////////////////////////////////
	// 描    述:  从this的时间到other的时间，有多少秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:39
	// 参数说明:  @other参考时间对象
	// 返 回 值:  秒时间差，this小other大时为正数，否则为负数，相同为0
	//////////////////////////////////////////////////////////////////////////
	int secsTo(SDateTime other);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  从this的时间到other的时间，有多少毫秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:40
	// 参数说明:  @other参考时间对象
	// 返 回 值:  秒时间差，this小other大时为正数，否则为负数，相同为0
	//////////////////////////////////////////////////////////////////////////
	int msecsTo(SDateTime other);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  赋值运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:58
	// 参数说明:  @dt表示参考值
	// 返 回 值:  this
	//////////////////////////////////////////////////////////////////////////
	SDateTime& operator=(const SDateTime &dt);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  小于比较运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  @other为参考对象
	// 返 回 值:  this<other时返回true，否则返回false
	//////////////////////////////////////////////////////////////////////////
	bool operator<(SDateTime &other);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  大于比较运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  @other为参考对象
	// 返 回 值:  this>other时返回true，否则返回false
	//////////////////////////////////////////////////////////////////////////
	bool operator>(SDateTime &other);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  小于等于比较运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  @other为参考对象
	// 返 回 值:  this<=other时返回true，否则返回false
	//////////////////////////////////////////////////////////////////////////
	bool operator<=(SDateTime &other);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  大于等于比较运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  @other为参考对象
	// 返 回 值:  this>=other时返回true，否则返回false
	//////////////////////////////////////////////////////////////////////////
	bool operator>=(SDateTime &other);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  等于比较运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  @other为参考对象
	// 返 回 值:  this==other时返回true，否则返回false
	//////////////////////////////////////////////////////////////////////////
	bool operator==(SDateTime &other);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  不等于比较运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  @other为参考对象
	// 返 回 值:  this!=other时返回true，否则返回false
	//////////////////////////////////////////////////////////////////////////
	bool operator!=(SDateTime &other);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  减法运算符重载
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  @other为参考对象
	// 返 回 值:  返回this-other的时间差秒数
	//////////////////////////////////////////////////////////////////////////
	int operator-(SDateTime &other);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取日期对象
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  void
	// 返 回 值:  SDate
	//////////////////////////////////////////////////////////////////////////
	SDate date();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取时间对象
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  void
	// 返 回 值:  STime
	//////////////////////////////////////////////////////////////////////////
	STime time();


	////////////////////////////////////////////////////////////////////////
	// 描    述:  取年
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  void
	// 返 回 值:  年
	//////////////////////////////////////////////////////////////////////////
	int year();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取月
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  void
	// 返 回 值:  月
	//////////////////////////////////////////////////////////////////////////
	int month();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取日
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  void
	// 返 回 值:  日
	//////////////////////////////////////////////////////////////////////////
	int day();

	//////////////////////////////////////////////////////////////////////////
	// 描    述:  取星期几0~6表示星期日~星期六
	// 作    者:  邵凯田
	// 创建时间:  2015-12-15 15:34
	// 参数说明:  void
	// 返 回 值:  int
	//////////////////////////////////////////////////////////////////////////
	int wday();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取时
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  void
	// 返 回 值:  时
	//////////////////////////////////////////////////////////////////////////
	int hour();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取分
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  void
	// 返 回 值:  分
	//////////////////////////////////////////////////////////////////////////
	int minute();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  void
	// 返 回 值:  秒
	//////////////////////////////////////////////////////////////////////////
	int second();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取毫秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  void
	// 返 回 值:  毫秒
	//////////////////////////////////////////////////////////////////////////
	int msec();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取微秒
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  void
	// 返 回 值:  微秒
	//////////////////////////////////////////////////////////////////////////
	int usec();

	////////////////////////////////////////////////////////////////////////
	// 描    述:  取世纪秒SOC
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:41
	// 参数说明:  void
	// 返 回 值:  SOC
	//////////////////////////////////////////////////////////////////////////
	inline int soc()	{return (int)m_t;};

	
	SDate m_date;//日期对象
	STime m_time;//时间对象
	time_t m_t;//世纪秒SOC
private:
	////////////////////////////////////////////////////////////////////////
	// 描    述:  生成格式化字段
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:54
	// 参数说明:  @fmt可以为各个字段的替代字符串：yyyyMMddhhmmsszzzuuu中之一
	// 返 回 值:  格式化为字符串的指定时间字段
	//////////////////////////////////////////////////////////////////////////
	SString toStr(SString fmt);

	////////////////////////////////////////////////////////////////////////
	// 描    述:  从给定的时间和格式化串到取指定字段的值
	// 作    者:  邵凯田
	// 创建时间:  2011-11-14 15:56
	// 参数说明:  @dtmask可以为各个字段的替代字符串如：yyyyMMddhhmmsszzzuuu
	//            @datetime为实际时间值
	//            @fmt为等取的字段替代字符串：yyyyMMddhhmmsszzzuuu中之一
	// 返 回 值:  int
	//////////////////////////////////////////////////////////////////////////
	static int getDateTimeItemByFormatStr(SString &dtmask,SString &datetime,SString fmt);
};
//typedef SDateTime QDateTime;

#endif
